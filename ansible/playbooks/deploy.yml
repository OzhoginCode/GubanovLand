- hosts: all
  gather_facts: no

  tasks:
    - name: Ping host
      ansible.builtin.ping:

    - name: Update packages
      ansible.builtin.apt:
        update_cache: yes
        upgrade: yes

    - name: Update system
      ansible.builtin.apt:
        upgrade: dist
    
    - name: Install make
      ansible.builtin.apt:
        name: make
        state: present
    
    - name: Install node.js
      import_role:
        name: geerlingguy.nodejs
      vars:
        nodejs_version: "21.x"
        nodejs_install_npm_user: "root"

    - name: Create appuser
      ansible.builtin.user:
        name: appuser
      become: yes

    - name: Git clone app
      ansible.builtin.git:
        repo: https://github.com/OzhoginCode/gubanov-landing
        dest: /home/appuser/app
        force: yes
      become: yes
      become_user: appuser
      notify:
        - Restart backend
        - Restart nginx

    - name: Install dependencies
      ansible.builtin.command: make install
      args:
        chdir: /home/appuser/app
      become: yes
      become_user: appuser
      notify:
          - Restart backend
          - Restart nginx

    - name: Copy .env file
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/../files/.env.vault"
        dest: /home/appuser/app/.env
      become: yes
      become_user: appuser
      notify:
        - Restart backend

    - name: Build statics
      ansible.builtin.command: make build
      args:
        chdir: /home/appuser/app
      become: yes
      become_user: appuser
      notify:
        - Restart nginx

    - name: Set permissions for files
      ansible.builtin.file:
        path: "{{ item }}"
        mode: 0600
      loop:
        - /home/appuser/app/.env
        - /home/appuser/app/.eslintignore
        - /home/appuser/app/.eslintrc.yml
        - /home/appuser/app/.gitignore
        - /home/appuser/app/Makefile
        - /home/appuser/app/package.json
        - /home/appuser/app/package-lock.json
        - /home/appuser/app/webpack.config.js
      notify:
        - Restart nginx
        - Restart backend

    - name: Set permissions for directories
      ansible.builtin.file:
        path: "{{ item }}"
        mode: 0700
        recurse: yes
      loop:
        - /home/appuser/app/app
        - /home/appuser/app/ansible
        - /home/appuser/app/.git
        - /home/appuser/app/node_modules
        - /home/appuser/app/statics
      notify:
        - Restart nginx
        - Restart backend

    - name: Set permissions for dist folder
      ansible.builtin.file:
        path: "/home/appuser/app/dist"
        mode: 0755
      notify:
        - Restart nginx
        - Restart backend

    - name: Copy backend systemd file
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/../files/backend.service"
        dest: /etc/systemd/system/backend.service

    - name: Reload systemd daemon
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Start backend
      ansible.builtin.systemd:
        name: backend
        state: started
        enabled: true

    - name: Install prerequisites for nginx
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      loop:
        - curl
        - gnupg2
        - ca-certificates
        - lsb-release
        - ubuntu-keyring

    - name: Fetch nginx signing key
      ansible.builtin.shell: "curl https://nginx.org/keys/nginx_signing.key | gpg --dearmor | sudo tee /usr/share/keyrings/nginx-archive-keyring.gpg >/dev/null"
      args:
        creates: /usr/share/keyrings/nginx-archive-keyring.gpg

    - name: Verify nginx signing key
      ansible.builtin.shell: "gpg --dry-run --quiet --no-keyring --import --import-options import-show /usr/share/keyrings/nginx-archive-keyring.gpg"
      register: key_verification

    - name: Set up apt repository for stable nginx packages
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] http://nginx.org/packages/ubuntu {{ ansible_lsb.codename }} nginx"
        state: present

    - name: Set up repository pinning
      ansible.builtin.copy:
        content: |
          Package: *
          Pin: origin nginx.org
          Pin: release o=nginx
          Pin-Priority: 900
        dest: /etc/apt/preferences.d/99nginx

    - name: Install nginx
      ansible.builtin.apt:
        name: nginx
        state: present
        update_cache: yes

    - name: Start nginx
      ansible.builtin.systemd:
        name: nginx
        state: started
        enabled: true

    - name: Update nginx.conf
      ansible.builtin.template:
        src: ../files/nginx.conf
        dest: /etc/nginx/nginx.conf
      notify:
        - Restart nginx

    - name: Update gubanovmusic.ru.conf
      ansible.builtin.template:
        src: ../files/gubanovmusic.ru.conf
        dest: /etc/nginx/conf.d/gubanovmusic.ru.conf
      notify:
        - Restart nginx

    - name: Add nginx user to appuser group
      ansible.builtin.user:
        name: nginx
        groups: appuser
        append: yes
      notify:
        - Restart nginx

    - name: Install snapd
      ansible.builtin.package:
        name: snapd
        state: present

    - name: Install classic snap support
      ansible.builtin.command: snap install core

    - name: Remove certbot-auto and any Certbot OS packages
      ansible.builtin.package:
        name: certbot
        state: absent
        autoremove: yes

    - name: Install Certbot snap
      ansible.builtin.command: snap install --classic certbot

    - name: Prepare Certbot command
      file:
        src: /snap/bin/certbot
        dest: /usr/bin/certbot
        state: link

    - name: Get and install certificates with Certbot
      ansible.builtin.command: certbot --nginx --agree-tos -m gmusicweb@yandex.ru -d gubanovmusic.ru -d www.gubanovmusic.ru
      notify:
        - Restart nginx

    - name: Test automatic renewal
      ansible.builtin.command: certbot renew --dry-run

  handlers:
    - name: Restart nginx
      ansible.builtin.service:
        name: nginx
        state: reloaded

    - name: Restart backend
      ansible.builtin.systemd:
        name: backend
        state: restarted

# TASKS:

# UFW setup (community.general.ufw)
# ssh config